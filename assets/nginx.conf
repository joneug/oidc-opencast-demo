# Reverse proxy to opencast
server {
  resolver 127.0.0.11;
  listen      80;
  server_name admin.opencast.local;

  location /oauth2/ {
    set $upstream oauth2-proxy:4180;
    proxy_pass http://$upstream;
    proxy_set_header Host                    $host;
    proxy_set_header X-Real-IP               $remote_addr;
    proxy_set_header X-Scheme                $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }

  location = /oauth2/auth {
    set $upstream oauth2-proxy:4180;
    proxy_pass http://$upstream;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        $remote_addr;
    proxy_set_header X-Scheme         $scheme;
    # nginx auth_request includes headers but not body
    proxy_set_header Content-Length   "";
    proxy_pass_request_body           off;
  }

  location / {
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in?rd=$scheme://$host$request_uri;

    # if you enabled --set-authorization-header, this passes the JWT
    auth_request_set $jwt $upstream_http_authorization;
    proxy_set_header Authorization $jwt;

    # if you enabled --cookie-refresh, this is needed for it to work with auth_request
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;

    proxy_pass http://host.docker.internal:8080;
  }
}

# Reverse proxy to oauth2-proxy
server {
  resolver 127.0.0.11;
  listen       80;
  server_name  oauth2-proxy.opencast.local;

  location / {
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    set $upstream oauth2-proxy:4180;
    proxy_pass http://$upstream;
  }
}

# Reverse proxy to keycloak
server {
  resolver 127.0.0.11;
  listen       80;
  server_name  keycloak.opencast.local;

  location / {
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    set $upstream keycloak:9080;
    proxy_pass http://$upstream;
  }
}
